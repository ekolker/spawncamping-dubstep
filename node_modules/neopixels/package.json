{
  "name": "neopixels",
  "version": "0.0.3",
  "description": "Library to run a strand of neopixels from Tessel",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "keywords": [
    "neopixel",
    "tessel",
    "led",
    "rgb"
  ],
  "author": {
    "name": "Jon McKay",
    "email": "jon@technical.io"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/tessel/neopixels"
  },
  "readme": "#Neopixels\n\n[Neopixels](https://learn.adafruit.com/adafruit-neopixel-uberguide) are strands of individually addressable RGB LEDs made by Adafruit. They're fantastic for creating light shows, art installations, mood lighting, and a ton of other applications. \n\nThis library is rather sparse at the moment and most of the functionality lies within a driver written in the firmware. It assumes a single strand of LEDs connected to pin G4 on the GPIO bank and RGB leds with a 800kHz signal. \n\n##Installation\n\nFirst, make sure you have the custom Neopixel firmware loaded onto your Tessel. Eventually, we'll make a snazzy C addon interface but for now we have an entire firmware build that you can download [from our build server](https://s3.amazonaws.com/builds.tessel.io/custom/neopixel.bin). After downloading run `tessel update ./PATH_TO_BINARY` to flash it onto your Tessel\n\nThen, install this library:\n`npm install neopixels`\n\nThen connect the circuit. You'll need a separate power source because these LEDs require **a lot** of juice. Check out [Adafruit's Powering Guide](https://learn.adafruit.com/adafruit-neopixel-uberguide/power) for the best advice. Best practice is to power the neopixels with 3.7V when using Tessel (since it is a 3.3V MCU) but 5V has worked fine in practice. Connect the data wire to G4 on Tessel's GPIO bank and connect GND on Tessel to both GND wires from the neopixels.\n\n##Usage\n\nExample:\n```.js\n// Import the neopixels library\nvar Neopixels = require('../');\n\n// Make an instance of the strip\nvar neopixels = new Neopixels();\n\n// When an animation completes\nneopixels.on('end', function() {\n  // Start the animation again\n  neopixels.animate(100, Buffer.concat(tracer(100)));\n});\n\n/* \n* Start an animation!\n* First argument is number of pixels per animation frame (usually the number of pixels in your strip)\n* The second argument is the animation data\n* The third optional argument is a callback on completion\n\n* The library will automatically split the animation up\n* into the appropriate number of animation frames\n* based on the size of each frame (first argument)\n*/\nneopixels.animate(100, Buffer.concat(tracer(100)));\n\n\n// An example animation\nfunction tracer(numLEDs) {\n  var trail = 5;\n  var arr = new Array(numLEDs);\n  for (var i = 0; i < numLEDs; i++) {\n    var buf = new Buffer(numLEDs * 3);\n    buf.fill(0);\n    for (var col = 0; col < 3; col++){\n      for (var k = 0; k < trail; k++) {\n        buf[(3*(i+numLEDs*col/3)+col+1 +3*k)] = 0xFF*(trail-k)/trail;\n      }\n    }\n    arr[i] = buf;\n  }\n  return arr;\n}\n\n```\n\n##Contributions\n\nThis library could use a ton of help! If you're going to help, you'll need to get your hands dirty with some C in our firmware. Check out the [Neopixel branch of firmware](https://github.com/tessel/firmware/tree/neopixel) and you'll need to be able to [compile your own firmware](https://github.com/tessel/firmware/tree/neopixel#compiling).\n\nEmail me at jon@technical.io if you're interested.\n\nThings that need doing:\n- {EASY} Making it possible to configure to run with a 400kHz signal as well.\n- {EASY} Making it possible to configure which pwm pin (G4, G5, or G6) the data is output on.\n- {MEDIUM [Non-firmware]} Add more example animations to the node module.\n- {HARD} Enable 3x the frame rate by allowing 3 animations to be passed in and outputting animations on all 3 pwm pins (G4, G5, and G6 on the GPIO bank).\n\n\n\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/tessel/neopixels/issues"
  },
  "_id": "neopixels@0.0.3",
  "_from": "neopixels@"
}
